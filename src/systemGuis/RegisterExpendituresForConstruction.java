package systemGuis;

import domain.ConstructionsManagementSystem;
import domain.Category;
import domain.ConstructionSite;
import domain.*;
import java.util.List;
import java.util.Observable;
import javax.swing.DefaultListModel;
import java.util.Observer;
import javax.swing.JOptionPane;

/*
    Davit Dostourian Erbe 281665 & Diego Pereira Puig - 329028
*/

public class RegisterExpendituresForConstruction extends javax.swing.JFrame implements Observer {

    private ConstructionsManagementSystem system1;
    private DefaultListModel<String> ConstructionSiteListModel;
    private DefaultListModel<String> CategoryListModel;

    public RegisterExpendituresForConstruction(ConstructionsManagementSystem system) {
        system1 = system;
        ConstructionSiteListModel = new DefaultListModel<>();
        CategoryListModel = new DefaultListModel<>();
        initComponents();
        loadConstructionSites();
        loadCategories();
        system1.addObserver(this);
    }

    private void loadConstructionSites() {
        ConstructionSiteListModel.clear();
        List<ConstructionSite> constructions = system1.obtainConstructionSites();
        for (ConstructionSite construction : constructions) {
            String combinedInfo = construction.getPermitNumber() + " - " + construction.getAddress();
            ConstructionSiteListModel.addElement(combinedInfo);
        }
        listConstructions.setModel(ConstructionSiteListModel);
    }

    private void loadCategories() {
        CategoryListModel.clear();
        List<Category> categories = system1.obtainCategories();
        for (Category category : categories) {
            CategoryListModel.addElement(category.getName());
        }
        listCategories.setModel(CategoryListModel);
    }

    @Override
    public void update(Observable o, Object arg) {
        if (o instanceof ConstructionsManagementSystem) {
            //ConstructionsManagementSystem systemData = (ConstructionsManagementSystem) o;
            loadConstructionSites();
            loadCategories();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listConstructions = new javax.swing.JList<>();
        CategoriesListLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listCategories = new javax.swing.JList<>();
        AmmountLabel = new javax.swing.JLabel();
        MonthLabel = new javax.swing.JLabel();
        ChangeLabel = new javax.swing.JLabel();
        DescriptionLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        inputDescription = new javax.swing.JTextArea();
        MonthInput = new javax.swing.JSpinner();
        inputYear = new javax.swing.JSpinner();
        InputAmmount = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registracion de Gastos para Obra");
        setMinimumSize(new java.awt.Dimension(520, 330));
        setPreferredSize(new java.awt.Dimension(520, 330));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setText("Obras");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(23, 28, 50, 16);

        listConstructions.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listConstructions);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 50, 110, 146);

        CategoriesListLabel.setText("Rubros");
        getContentPane().add(CategoriesListLabel);
        CategoriesListLabel.setBounds(160, 30, 50, 16);

        listCategories.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listCategories);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(160, 50, 110, 146);

        AmmountLabel.setText("Monto:");
        getContentPane().add(AmmountLabel);
        AmmountLabel.setBounds(290, 30, 50, 16);

        MonthLabel.setText("Mes:");
        getContentPane().add(MonthLabel);
        MonthLabel.setBounds(290, 80, 50, 16);

        ChangeLabel.setText("Año:");
        getContentPane().add(ChangeLabel);
        ChangeLabel.setBounds(360, 80, 60, 16);

        DescriptionLabel.setText("Descripcion:");
        getContentPane().add(DescriptionLabel);
        DescriptionLabel.setBounds(290, 130, 120, 16);

        inputDescription.setColumns(20);
        inputDescription.setRows(5);
        jScrollPane3.setViewportView(inputDescription);

        getContentPane().add(jScrollPane3);
        jScrollPane3.setBounds(290, 150, 210, 120);
        getContentPane().add(MonthInput);
        MonthInput.setBounds(290, 100, 50, 22);
        getContentPane().add(inputYear);
        inputYear.setBounds(360, 100, 60, 22);

        InputAmmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputAmmountActionPerformed(evt);
            }
        });
        getContentPane().add(InputAmmount);
        InputAmmount.setBounds(290, 50, 71, 22);

        jButton1.setText("Registrar Gastos");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(50, 240, 170, 23);

        setBounds(0, 0, 542, 310);
    }// </editor-fold>//GEN-END:initComponents

    private void InputAmmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputAmmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InputAmmountActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BUTTON CLICK CODE
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
  int selectedConstructionIndex = listConstructions.getSelectedIndex();
    if (selectedConstructionIndex == -1) {
        JOptionPane.showMessageDialog(null, "Debe seleccionar una obra.");
        return;
    }

    int selectedCategoryIndex = listCategories.getSelectedIndex();
    if (selectedCategoryIndex == -1) {
        JOptionPane.showMessageDialog(null, "Debe seleccionar un rubro.");
        return;
    }

    String amountString = InputAmmount.getText().trim();
    if (amountString.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Debe ingresar un monto.");
        return;
    }
    double amount;
    try {
        amount = Double.parseDouble(amountString);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Monto inválido. Debe ser un número.");
        return;
    }
    if (amount <= 0) {
        JOptionPane.showMessageDialog(null, "Monto debe ser un número positivo.");
        return;
    }

    int month = (Integer) MonthInput.getValue();
    int year = (Integer) inputYear.getValue();
    String description = inputDescription.getText().trim();
    if (description.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Debe ingresar una descripción.");
        return;
    }

    ConstructionSite selectedConstructionSite = system1.obtainConstructionSites().get(selectedConstructionIndex);
    Category selectedCategory = system1.obtainCategories().get(selectedCategoryIndex);

    system1.registerExpenditures(
            selectedConstructionSite,
            selectedCategory,
            amount,
            month,
            year,
            description,
            false
    );

    listConstructions.setSelectedIndex(-1);
    listCategories.setSelectedIndex(-1);
    InputAmmount.setText("");
    MonthInput.setValue(1);
    inputYear.setValue(2024);
    inputDescription.setText("");

    JOptionPane.showMessageDialog(null, "Gasto registrado exitosamente!");
    }//GEN-LAST:event_jButton1MouseClicked

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterExpendituresForConstruction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterExpendituresForConstruction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterExpendituresForConstruction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterExpendituresForConstruction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 ConstructionsManagementSystem system = new ConstructionsManagementSystem();
                new RegisterExpendituresForConstruction(system1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AmmountLabel;
    private javax.swing.JLabel CategoriesListLabel;
    private javax.swing.JLabel ChangeLabel;
    private javax.swing.JLabel DescriptionLabel;
    private javax.swing.JTextField InputAmmount;
    private javax.swing.JSpinner MonthInput;
    private javax.swing.JLabel MonthLabel;
    private javax.swing.JTextArea inputDescription;
    private javax.swing.JSpinner inputYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listCategories;
    private javax.swing.JList<String> listConstructions;
    // End of variables declaration//GEN-END:variables
}

