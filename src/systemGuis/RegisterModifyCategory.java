package systemGuis;

import domain.Category;
import domain.ConstructionsManagementSystem;

import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;

/*
    Davit Dostourian Erbe 281665 & Diego Pereira Puig - 329028
*/

public class RegisterModifyCategory extends javax.swing.JFrame {
    
    private ConstructionsManagementSystem system1;
    private DefaultListModel<String> categoryListModel;

    public RegisterModifyCategory(ConstructionsManagementSystem system) {
        system1 = system;
        categoryListModel = new DefaultListModel<>();
        initComponents();
         jList1.setModel(categoryListModel); // Asignar el modelo a jList1
        updateCategoryList();
    }

     private void updateCategoryList() {
        categoryListModel.clear();
        List<Category> categories = system1.obtainCategories();
        for (Category category : categories) {
            categoryListModel.addElement(category.getName());
        }
    }
     private void clearInputs() {
        nameInput.setText("");
        descriptionInput.setText("");
        nameInput.setEditable(true); // Habilitar el campo de nombre después de limpiar
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionInput = new javax.swing.JTextArea();
        addCategory = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        ModifyDescription = new javax.swing.JButton();
        confirmModify = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Registrar / Modificar Rubro");
        getContentPane().setLayout(null);

        nameLabel.setText("Nombre:");
        getContentPane().add(nameLabel);
        nameLabel.setBounds(20, 70, 50, 16);

        descriptionLabel.setText("Descripción:");
        getContentPane().add(descriptionLabel);
        descriptionLabel.setBounds(20, 130, 110, 16);

        nameInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameInputActionPerformed(evt);
            }
        });
        getContentPane().add(nameInput);
        nameInput.setBounds(20, 90, 100, 22);

        descriptionInput.setColumns(20);
        descriptionInput.setRows(5);
        jScrollPane1.setViewportView(descriptionInput);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 150, 150, 70);

        addCategory.setText("Agregar");
        addCategory.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addCategoryMouseClicked(evt);
            }
        });
        addCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCategoryActionPerformed(evt);
            }
        });
        getContentPane().add(addCategory);
        addCategory.setBounds(20, 240, 80, 23);

        jLabel1.setText("Registrar/Modificar Rubro");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 20, 210, 40);

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(200, 90, 180, 130);

        ModifyDescription.setText("Modificar");
        ModifyDescription.setMargin(new java.awt.Insets(2, 10, 3, 10));
        ModifyDescription.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ModifyDescriptionMouseClicked(evt);
            }
        });
        getContentPane().add(ModifyDescription);
        ModifyDescription.setBounds(200, 240, 80, 23);

        confirmModify.setText("Confirmar");
        confirmModify.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        confirmModify.setMargin(new java.awt.Insets(2, 8, 3, 8));
        confirmModify.setName(""); // NOI18N
        confirmModify.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                confirmModifyMouseClicked(evt);
            }
        });
        confirmModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmModifyActionPerformed(evt);
            }
        });
        getContentPane().add(confirmModify);
        confirmModify.setBounds(298, 240, 80, 23);

        jLabel2.setText("Rubro:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(200, 70, 70, 16);

        setBounds(0, 0, 414, 307);
    }// </editor-fold>//GEN-END:initComponents

    private void nameInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameInputActionPerformed

    private void addCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCategoryActionPerformed
       
    }//GEN-LAST:event_addCategoryActionPerformed

    private void addCategoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addCategoryMouseClicked
         String name = nameInput.getText().trim();
        String description = descriptionInput.getText().trim();

        if (name.isEmpty() || description.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Datos incompletos", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (system1.obtainCategories().stream().anyMatch(category -> category.getName().equals(name))) {
            JOptionPane.showMessageDialog(this, "El nombre del rubro ya existe.", "Nombre duplicado", JOptionPane.WARNING_MESSAGE);
            return;
        }

        system1.registerCategory(name, description);
        updateCategoryList();
        clearInputs();
        JOptionPane.showMessageDialog(this, "Rubro agregado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    
    }//GEN-LAST:event_addCategoryMouseClicked

    private void ModifyDescriptionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ModifyDescriptionMouseClicked
       int selectedIndex = jList1.getSelectedIndex();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un rubro de la lista.", "No se seleccionó ningún rubro", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String selectedCategory = jList1.getSelectedValue();
        for (Category category : system1.obtainCategories()) {
            if (category.getName().equals(selectedCategory)) {
                nameInput.setText(category.getName());
                descriptionInput.setText(category.getDescription());
                nameInput.setEditable(false); // Deshabilitar el campo de nombre
                break;
            }
        }
    
    }//GEN-LAST:event_ModifyDescriptionMouseClicked

    private void confirmModifyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_confirmModifyMouseClicked
         int selectedIndex = jList1.getSelectedIndex();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione un rubro de la lista.", "No se seleccionó ningún rubro", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String selectedCategory = jList1.getSelectedValue();
        String newDescription = descriptionInput.getText().trim();

        if (newDescription.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese una descripción.", "Descripción vacía", JOptionPane.WARNING_MESSAGE);
            return;
        }

         for (Category category : system1.obtainCategories()) {
            if (category.getName().equals(selectedCategory)) {
                category.setDescription(newDescription);
                break;
            }
        }

        updateCategoryList();
        clearInputs();
        JOptionPane.showMessageDialog(this, "Descripción del rubro modificada exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_confirmModifyMouseClicked

    private void confirmModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmModifyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_confirmModifyActionPerformed


    

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegisterModifyCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegisterModifyCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegisterModifyCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegisterModifyCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
      java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegisterModifyCategory(new ConstructionsManagementSystem()).setVisible(true); // Pass the correct system object here
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ModifyDescription;
    private javax.swing.JButton addCategory;
    private javax.swing.JButton confirmModify;
    private javax.swing.JTextArea descriptionInput;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    // End of variables declaration//GEN-END:variables
}
